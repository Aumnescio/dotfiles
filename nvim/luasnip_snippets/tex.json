{
  "!latexbase": {
    "prefix": "!latexbase",
    "description": "Snippet for: (Lua)Latex base template.",
    "body": [
      "\\RequirePackage{fix-cm\\}",
      "\\documentclass[12pt]{article\\}",
      "",
      "% Packages",
      "\\usepackage[left=2cm,right=2cm,top=2cm,bottom=2cm]{geometry\\}",
      "\\usepackage[T1]{fontenc\\}",
      "\\usepackage{fontspec\\}",
      "\\usepackage{setspace\\}",
      "\\usepackage{graphicx\\}",
      "\\usepackage{titlesec\\}",
      "\\usepackage{verbatim\\}       % For manually formatted text.",
      "% \\usepackage{minted\\}         % For colored code blocks.",
      "% \\usemintedstyle{tango\\}    % Colored code block theme.",
      "% \\graphicspath{{/home/aum/Pictures/Screenshots/\\}\\}  % Can remove if not using images.",
      "",
      "% Settings",
      "\\setmainfont{JetBrains Mono Regular Nerd Font Complete\\}  % This works as a font, but is telling me the unicode characters are missing.",
      "\\setmonofont{JetBrains Mono Regular Nerd Font Complete\\}",
      "\\setlength{\\parindent\\}{0em\\}",
      "\\setlength{\\parskip\\}{0.5em\\}",
      "\\setcounter{secnumdepth\\}{3\\}",
      "\\textwidth 6.5in",
      "\\textheight 9.in",
      "\\oddsidemargin 0in",
      "\\headheight 0in",
      "\\doublespacing",
      "",
      "\\newfontface\\Symbola{Symbola\\}",
      "{\\Symbola\\global\\expandafter\\let\\expandafter\\fallbackfont\\the\\font\\}",
      "\\usepackage{luacode\\}",
      "\\begin{luacode\\}",
      "",
      "local fontcharacters = { \\}",
      "local nullfont       = 0",
      "local glyph_t        = nodes.nodecodes.glyph",
      "local fallbackfont   = font.id(\"fallbackfont\")",
      "",
      "table.setmetatableindex(fontcharacters, function (t, k)",
      "\tif k == true then",
      "\t\treturn fontcharacters[currentfont()]",
      "\telse",
      "\t\tlocal tfmdata = fonts.hashes.identifiers[k]",
      "",
      "\t\tif not tfmdata then",
      "\t\t\ttfmdata = font.fonts[k]",
      "\t\t\tif not (tfmdata and type (tfmdata) == \"table\") then",
      "\t\t\t\treturn false",
      "\t\t\tend",
      "\t\tend",
      "",
      "\t\tlocal characters = tfmdata.characters",
      "\t\tt[k] = characters",
      "\t\treturn characters",
      "\tend",
      "end)",
      "",
      "local nodeprocessor = function (head)",
      "\tlocal lastfont, characters = nil, nil",
      "\tfor n in node.traverse_id(glyph_t, head) do",
      "\t\tlocal currfont = n.font",
      "\t\tlocal char = n.char",
      "",
      "\t\tif currfont ~= lastfont and currfont ~= nullfont then",
      "\t\t\tcharacters = fontcharacters[currfont]",
      "\t\tend",
      "",
      "\t\tif characters ~= false then",
      "\t\t\tlastfont = currfont",
      "\t\t\tif not characters[char] then",
      "\t\t\t\tn.font = fallbackfont",
      "\t\t\t\tif fontcharacters[fallbackfont][char] then",
      "\t\t\t\t\tnode.remove(head,node.next(n)) -- remove .notdef char (new in luaotfload 2.98)",
      "\t\t\t\tend",
      "\t\t\tend",
      "\t\tend",
      "\tend",
      "\treturn head, false",
      "end",
      "luatexbase.add_to_callback(\"pre_linebreak_filter\", nodeprocessor, \"replace missing glyphs\")",
      "\\end{luacode\\}",
      "",
      "% Heading",
      "\\author{Herbert Salin\\}",
      "\\title{$1\\}",
      "\\date{\\today\\}",
      "",
      "% |> START -> Document <|",
      "\\begin{document\\}",
      "\\maketitle",
      "% \\tableofcontents",
      "",
      "\\section{$2\\}",
      "",
      "\\end{document\\}",
      "% |> END -> Document <|"
    ]
  },
  "table": {
    "prefix": "table",
    "description": "Snippet for: \\begin{tabular}.",
    "body": [
      "\\begin{center\\}",
      "\\begin{tabular\\}{ |c|c| \\} ",
      "\t\\hline",
      "\tTitle & Title \\ ",
      "\tthing & thing \\ ",
      "\tthing & thing \\ ",
      "\tthing & thing \\ ",
      "\t\\hline",
      "\\end{tabular\\}",
      "\\end{center\\}"
    ]
  },
  "section": {
    "prefix": "section",
    "description": "Snippet for: \\section{}.",
    "body": "\\section{$0\\}"
  },
  "subsection": {
    "prefix": "subsection",
    "description": "Snippet for: \\subsection{}.",
    "body": "\\subsection{$0\\}"
  },
  "list_bullet": {
    "prefix": "list_bullet",
    "description": "Snippet for: \\begin{itemize} & \\end{itemize}.",
    "body": [
      "\\begin{itemize\\}",
      "\t$0",
      "\\end{itemize\\}"
    ]
  },
  "list_enum": {
    "prefix": "list_enum",
    "description": "Snippet for: \\begin{enumerate} & \\end{enumerate}.",
    "body": [
      "\\begin{enumerate\\}",
      "\t$0",
      "\\end{enumerate\\}"
    ]
  },
  "item": {
    "prefix": "item",
    "description": "Snippet for: \\item.",
    "body": "\\item $0"
  },
  "verbatim": {
    "prefix": "verbatim",
    "description": "Snippet for: verbatim environment.",
    "body": [
      "\\begin{verbatim\\}",
      "$0",
      "\\end{verbatim\\}"
    ]
  },
  "codeblock": {
    "prefix": "codeblock",
    "description": "Snippet for: codeblock.",
    "body": [
      "\\begin(lstlisting)",
      "$0",
      "\\end(lstlisting)"
    ]
  },
  "image": {
    "prefix": "image",
    "description": "Snippet for: includegraphics image.",
    "body": "\\includegraphics[width=\\textwidth]{$0\\}  % Name of image without extension."
  },
  "codeblock_colored": {
    "prefix": "codeblock_colored",
    "description": "Snippet for: minted codeblock.",
    "body": [
      "\\begin{minted\\}{$1\\}",
      "\t$0",
      "\\end{minted\\}"
    ]
  }
}
